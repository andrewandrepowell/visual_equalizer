// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _math_accel_Block_ZrsILi32ELb0EE11ap_int_s_HH_
#define _math_accel_Block_ZrsILi32ELb0EE11ap_int_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "math_accel_uitodp_32s_64_3.h"
#include "math_accel_dsqrt_64ns_64ns_64_17.h"
#include "math_accel_mac_muladd_16s_16s_32s_32_1.h"
#include "math_accel_mul_mul_16s_16s_32_1.h"

namespace ap_rtl {

struct math_accel_Block_ZrsILi32ELb0EE11ap_int_s : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > in_stream_TDATA;
    sc_in< sc_logic > in_stream_TVALID;
    sc_out< sc_logic > in_stream_TREADY;
    sc_in< sc_lv<4> > in_stream_TKEEP;
    sc_in< sc_lv<4> > in_stream_TSTRB;
    sc_in< sc_lv<1> > in_stream_TUSER;
    sc_in< sc_lv<1> > in_stream_TLAST;
    sc_in< sc_lv<1> > in_stream_TID;
    sc_in< sc_lv<1> > in_stream_TDEST;
    sc_out< sc_lv<1> > tmp_last_V_2_out_out_din;
    sc_in< sc_logic > tmp_last_V_2_out_out_full_n;
    sc_out< sc_logic > tmp_last_V_2_out_out_write;
    sc_out< sc_lv<64> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const1;


    // Module declarations
    math_accel_Block_ZrsILi32ELb0EE11ap_int_s(sc_module_name name);
    SC_HAS_PROCESS(math_accel_Block_ZrsILi32ELb0EE11ap_int_s);

    ~math_accel_Block_ZrsILi32ELb0EE11ap_int_s();

    sc_trace_file* mVcdFile;

    math_accel_uitodp_32s_64_3<1,3,32,64>* math_accel_uitodp_32s_64_3_U1;
    math_accel_dsqrt_64ns_64ns_64_17<1,17,64,64,64>* math_accel_dsqrt_64ns_64ns_64_17_U2;
    math_accel_mac_muladd_16s_16s_32s_32_1<1,1,16,16,32,32>* math_accel_mac_muladd_16s_16s_32s_32_1_U3;
    math_accel_mul_mul_16s_16s_32_1<1,1,16,16,32>* math_accel_mul_mul_16s_16s_32_1_U4;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<21> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_39;
    sc_signal< sc_logic > in_stream_TDATA_blk_n;
    sc_signal< sc_logic > tmp_last_V_2_out_out_blk_n;
    sc_signal< sc_lv<32> > grp_fu_108_p3;
    sc_signal< sc_lv<32> > squared_sum_reg_122;
    sc_signal< bool > ap_sig_74;
    sc_signal< sc_lv<64> > grp_fu_69_p1;
    sc_signal< sc_lv<64> > tmp_3_i_reg_127;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_84;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_103;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_111;
    sc_signal< sc_lv<16> > real_1_fu_86_p1;
    sc_signal< sc_lv<16> > img_fu_94_p4;
    sc_signal< sc_lv<16> > grp_fu_108_p0;
    sc_signal< sc_lv<32> > img32_fu_104_p1;
    sc_signal< sc_lv<16> > grp_fu_108_p1;
    sc_signal< sc_lv<32> > tmp_1_i_fu_115_p2;
    sc_signal< sc_lv<16> > tmp_1_i_fu_115_p0;
    sc_signal< sc_lv<32> > real32_fu_90_p1;
    sc_signal< sc_lv<16> > tmp_1_i_fu_115_p1;
    sc_signal< sc_lv<64> > grp_fu_72_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st21_fsm_20;
    sc_signal< bool > ap_sig_169;
    sc_signal< sc_lv<21> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<21> ap_ST_st1_fsm_0;
    static const sc_lv<21> ap_ST_st2_fsm_1;
    static const sc_lv<21> ap_ST_st3_fsm_2;
    static const sc_lv<21> ap_ST_st4_fsm_3;
    static const sc_lv<21> ap_ST_st5_fsm_4;
    static const sc_lv<21> ap_ST_st6_fsm_5;
    static const sc_lv<21> ap_ST_st7_fsm_6;
    static const sc_lv<21> ap_ST_st8_fsm_7;
    static const sc_lv<21> ap_ST_st9_fsm_8;
    static const sc_lv<21> ap_ST_st10_fsm_9;
    static const sc_lv<21> ap_ST_st11_fsm_10;
    static const sc_lv<21> ap_ST_st12_fsm_11;
    static const sc_lv<21> ap_ST_st13_fsm_12;
    static const sc_lv<21> ap_ST_st14_fsm_13;
    static const sc_lv<21> ap_ST_st15_fsm_14;
    static const sc_lv<21> ap_ST_st16_fsm_15;
    static const sc_lv<21> ap_ST_st17_fsm_16;
    static const sc_lv<21> ap_ST_st18_fsm_17;
    static const sc_lv<21> ap_ST_st19_fsm_18;
    static const sc_lv<21> ap_ST_st20_fsm_19;
    static const sc_lv<21> ap_ST_st21_fsm_20;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<64> ap_const_lv64_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_103();
    void thread_ap_sig_111();
    void thread_ap_sig_169();
    void thread_ap_sig_39();
    void thread_ap_sig_74();
    void thread_ap_sig_84();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st21_fsm_20();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_grp_fu_108_p0();
    void thread_grp_fu_108_p1();
    void thread_img32_fu_104_p1();
    void thread_img_fu_94_p4();
    void thread_in_stream_TDATA_blk_n();
    void thread_in_stream_TREADY();
    void thread_real32_fu_90_p1();
    void thread_real_1_fu_86_p1();
    void thread_tmp_1_i_fu_115_p0();
    void thread_tmp_1_i_fu_115_p1();
    void thread_tmp_last_V_2_out_out_blk_n();
    void thread_tmp_last_V_2_out_out_din();
    void thread_tmp_last_V_2_out_out_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
