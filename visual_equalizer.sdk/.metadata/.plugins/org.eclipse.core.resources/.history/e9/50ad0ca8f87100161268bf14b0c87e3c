#ifndef MAT_H_
#define MAT_H_

#include <stdio.h>

namespace la
{
	template <typename TYPE_,int SIZE_>
	class pixel
	{
	public:
		pixel() { }
		pixel( TYPE_* data )
		{
			for ( int each_ch=0; each_ch<SIZE_; each_ch++ )
				this->data[ each_ch ] = data[ each_ch ];
		}
		~pixel() { }
		TYPE_* get() { data; }
	private:
		TYPE_ data[ SIZE_ ];
	};

	template <typename TYPE_,int ROWS_,int COLS_,int STRIDE_>
	class mat
	{
	public:
		mat() { }
		~mat() { }
		TYPE_* getrow( int row ) { return data+STRIDE_*row; }
		TYPE_& get( int row, int col ) { return *(getrow( row )+col); }
	private:
		TYPE_ data[ STRIDE_*ROWS_ ];
	};

	template <typename MAT0_,typename MAT1_>
	MAT1_& getroi( )
};

#endif
